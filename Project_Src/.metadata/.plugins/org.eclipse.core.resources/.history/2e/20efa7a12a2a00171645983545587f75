/*
 ============================================================================
 Name        : 7segcnt.c
 Author      : Kiran
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 DIY: IMPLEMENT UPDOWN COUNTING
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include<stdint.h>

uint8_t numbers[10]={0x77,0x06,0xB3,0x97,0x66,0xD5,0xf6,0x07,0xf7,0XD7};


void start_downcounting(int delay_value)
{



}

void start_downcounting(int delay_value)
{



}

void start_updowncounting(int delay_value)
{

	/* DIY : Student has to implement this */
	printf("/* DIY : Student has to implement this */\n");


}

void start_updowncounting(int delay_value)
{

	/* DIY : Student has to implement this */
	printf("/* DIY : Student has to implement this */\n");


}
int main(int argc, char *argv[]) {
	printf("This program controls the USER LED3\n");

	if ( argc != 3 ) /* argc should be 3 for correct execution */
	{

		printf( "usage: %s <direction> <delay>\n", argv[0] );
		printf( "valid direction : up, down, updown\n");
		printf ("recommended delay range : 0 to 1000\n");
	}
	else
	{
    	/* argc is correct , lets check argv */
    	if (strcmp(argv[1], "up") == 0)
    	{
    		start_upcounting(argv[2]);
    	}
    	else if (strcmp(argv[1], "down") == 0)
    	{
    		start_downcounting(argv[2]);
    	}
    	else if (strcmp(argv[1], "updown") == 0)
    	{
    		start_updowncounting(argv[2]);
    	}
    	else if (strcmp(argv[1], "random") == 0)
    	{
    		start_randomcounting(argv[2]);
    	}
    	else /* default: */
    	{
    		printf("Invalid direction values\n");
    		printf( "valid direction values : up, down,updown,random\n");
    	}
	}
}
